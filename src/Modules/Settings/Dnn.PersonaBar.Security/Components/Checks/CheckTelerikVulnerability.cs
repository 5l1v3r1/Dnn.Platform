using System;
using System.Collections.Generic;
using System.IO;
using System.Xml;
using DotNetNuke.Application;
using DotNetNuke.Common;
using DotNetNuke.Common.Utilities;
using Assembly = System.Reflection.Assembly;

namespace Dnn.PersonaBar.Security.Components.Checks
{
    public class CheckTelerikVulnerability : IAuditCheck
    {
        public CheckResult Execute()
        {
            var result = new CheckResult(SeverityEnum.Unverified, "CheckTelerikVulnerability");

            const string fileSum = "1ccb4c868938c15d209cae7ace3161420d85f58cbe74a7b3dfb6a2dc9100f6a3";
            const string settingName = "Telerik.AsyncUpload.ConfigurationEncryptionKey";
            var compareVersion = new Version(2017, 2, 621);
            var filePath = Path.Combine(Globals.ApplicationMapPath, "bin\\Telerik.Web.UI.dll");
            if (File.Exists(filePath))
            {
                var assemblyVersion = Assembly.LoadFile(filePath).GetName().Version;
                if ((assemblyVersion < compareVersion && Utility.GetFileCheckSum(filePath) != fileSum)
                    || string.IsNullOrEmpty(Config.GetSetting(settingName)))
                {
                    result.Severity = SeverityEnum.Failure;
                }
                else
                {
                    result.Severity = SeverityEnum.Pass;
                }
            }
            else
            {
                result.Severity = SeverityEnum.Pass;
            }

            return result;
        }
    }
}
<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dnn.Modules.ResourceManager</name>
    </assembly>
    <members>
        <member name="F:Dnn.Modules.ResourceManager.Components.Constants.ViewResourceFileName">
            <summary>
            The relative path to the shared resource file for this module.
            </summary>
        </member>
        <member name="T:Dnn.Modules.ResourceManager.Components.IGroupManager">
            <summary>
            Manager class for Groups logic on Resource Manager
            </summary>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IGroupManager.FindOrCreateGroupFolder(System.Int32,System.Int32)">
            <summary>
            Find or create the folder of the group
            </summary>
            <param name="portalId">Id of the portal</param>
            <param name="groupId">Id of the group</param>
            <returns>The Group folder. If the group has not a folder currently, then a new one will be created and returned</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IGroupManager.GetGroupFolder(System.Int32,System.Int32)">
            <summary>
            Get the folder of the group
            </summary>
            <param name="portalId">Id of the portal</param>
            <param name="groupId">Id of the group</param>
            <returns>The group folder, if it exist, or null if doesn't</returns>
        </member>
        <member name="T:Dnn.Modules.ResourceManager.Components.IItemsManager">
            <summary>
            Manager for the items of Resource Manager
            </summary>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IItemsManager.GetFolderContent(System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Get the items contained on the folder
            </summary>
            <param name="folderId">Container folder id</param>
            <param name="startIndex">Index of the first item to be returned</param>
            <param name="numItems">Max number of items to return</param>
            <param name="sorting">Sorting option</param>
            <param name="moduleMode">Current mode of module instance</param>
            <returns></returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IItemsManager.GetFileContent(System.Int32,System.String@,System.String@)">
            <summary>
            Get the content of the file
            </summary>
            <param name="fileId">Id of the file</param>
            <param name="fileName">Name of the file</param>
            <param name="contentType">Type of the file</param>
            <returns>Stream of the file content</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IItemsManager.CreateNewFolder(System.String,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            Create a new folder on Parent Folder
            </summary>
            <param name="folderName">Name of the new folder</param>
            <param name="parentFolderId">Id of the parent folder</param>
            <param name="folderMappingId">Id of folder mapping</param>
            <param name="mappedName">Mapped name</param>
            <param name="moduleMode">Current mode of the module instance</param>
            <returns>Folder info object of the new created folder</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IItemsManager.SaveFileDetails(DotNetNuke.Services.FileSystem.IFileInfo,Dnn.Modules.ResourceManager.Services.Dto.FileDetailsRequest)">
            <summary>
            Update the asset details of a file
            </summary>
            <param name="file">File</param>
            <param name="fileDetails">New asset details of the file</param>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IItemsManager.SaveFolderDetails(DotNetNuke.Services.FileSystem.IFolderInfo,Dnn.Modules.ResourceManager.Services.Dto.FolderDetailsRequest)">
            <summary>
            Update the asset details of a folder
            </summary>
            <param name="folder">Folder</param>
            <param name="folderDetails">New asset details of the folder</param>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IItemsManager.DeleteFile(System.Int32,System.Int32,System.Int32)">
            <summary>
            Delete a file
            </summary>
            <param name="fileId">File to delete id</param>
            <param name="moduleMode">Current mode of the module instance</param>
            <param name="groupId">Id of the group (For Group Mode)</param>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IItemsManager.DeleteFolder(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Delete a folder
            </summary>
            <param name="folderId">Folder to delete Id</param>
            <param name="unlinkAllowedStatus">Unlink allowed status</param>
            <param name="moduleMode">Current mode of the module instance</param>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.ILocalizationController.GetLocalizedDictionary(System.String,System.String)">
            <summary>
            Returns a dictionary of localized key for a resource file for a given culture
            </summary>
            <param name="resourceFile">The relative file path of the main resource file, e.g. ~/DesktopModules/SocialLibrary/App_LocalResources/CmxResources.resx</param>
            <param name="culture">The culture for which this dictionay is requested</param>
            <remarks>This API does not fallback to any other DNN resource files.</remarks>
        </member>
        <member name="T:Dnn.Modules.ResourceManager.Components.IPermissionsManager">
            <summary>
            Manager for permission logic of Resource Manager
            </summary>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IPermissionsManager.HasFolderContentPermission(System.Int32,System.Int32)">
            <summary>
            Return if the current user is allowed to view the content of a folder
            </summary>
            <param name="folderId">Id of the folder</param>
            <param name="moduleMode">Current mode of the module instance</param>
            <returns>If the user is allowed or not</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IPermissionsManager.HasGetFileContentPermission(System.Int32)">
            <summary>
            Return if the current user is allowed to read the files of a folder
            </summary>
            <param name="folderId">Id of the folder</param>
            <returns>If the user is allowed or not</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IPermissionsManager.HasAddFilesPermission(System.Int32,System.Int32)">
            <summary>
            Return if the current user is allowed to add files on a folder
            </summary>
            <param name="moduleMode">Current mode of the module instance</param>
            <param name="folderId">Id of the folder</param>
            <returns>If the user is allowed or not</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IPermissionsManager.HasAddFoldersPermission(System.Int32,System.Int32)">
            <summary>
            Return if the current user is allowed to add folders on a folder
            </summary>
            <param name="moduleMode">Current mode of the module instance</param>
            <param name="folderId">Id of the folder</param>
            <returns>If the user is allowed or not</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IPermissionsManager.HasDeletePermission(System.Int32,System.Int32)">
            <summary>
            Return if the current user is allowed to delete items from a folder
            </summary>
            <param name="moduleMode">Current mode of the module instace</param>
            <param name="folderId">Id of the folder</param>
            <returns>If the user is allowed or not</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IPermissionsManager.HasManagePermission(System.Int32,System.Int32)">
            <summary>
            Return if the current user is allowed to manage the items of a folder
            </summary>
            <param name="moduleMode">Current mode of the module instance</param>
            <param name="folderId">Id of the folder</param>
            <returns>If the user is allowed or not</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.ISearchController.SearchFolderContent(System.Int32,DotNetNuke.Services.FileSystem.IFolderInfo,System.Boolean,System.String,System.Int32,System.Int32,System.String,System.Int32,System.Int32@)">
            <summary>
            Performs the Advanced File Search
            </summary>
            <param name="moduleId">The id of the Module</param>
            <param name="folder">Folder that defines the context of the search</param>
            <param name="recursive">Include subfolders in search</param>
            <param name="search">Search query</param>
            <param name="pageIndex">page index</param>
            <param name="pageSize">page size</param>
            <param name="sorting">sorting</param>
            <param name="moduleMode">Module Mode.</param>
            <param name="totalCount">total count.</param>
            <returns>Result set of the File Search</returns>
        </member>
        <member name="T:Dnn.Modules.ResourceManager.Components.IThumbnailsManager">
            <summary>
            Manager for Thumbnails on Resource Manager
            </summary>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IThumbnailsManager.ThumbnailAvailable(System.String)">
            <summary>
            Return if a file is available to get a thumbnail
            </summary>
            <param name="fileName">Name of the file</param>
            <returns>If the file is available to get a thumbnail or not</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IThumbnailsManager.ThumbnailUrl(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the url of the thumbnail of a file
            </summary>
            <param name="moduleId">Id of the module</param>
            <param name="fileId">Id of the file</param>
            <param name="width">Width of the thumbnail</param>
            <param name="height">Height of the thumbnail</param>
            <returns>The url of the result thumbnail</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IThumbnailsManager.ThumbnailUrl(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            Return the url of the thumbnail of a file
            </summary>
            <param name="moduleId">Id of the module</param>
            <param name="fileId">Id of the file</param>
            <param name="width">Width of the thumbnail</param>
            <param name="height">Height of the thumbnail</param>
            <param name="timestamp">Timestamp</param>
            <returns>The url of the result thumbnail</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IThumbnailsManager.ThumbnailUrl(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Return the url of the thumbnail of a file
            </summary>
            <param name="moduleId">Id of the module</param>
            <param name="fileId">Id of the file</param>
            <param name="width">Width of the thumbnail</param>
            <param name="height">Height of the thumbnail</param>
            <param name="version">Version of the file</param>
            <returns>The url of the result thumbnail</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IThumbnailsManager.GetThumbnailContentFromImageUrl(System.String,System.Int32,System.Int32)">
            <summary>
            Get the thumbnail from an image
            </summary>
            <param name="imageUrl">Url of the image</param>
            <param name="width">Width of the thumbnail</param>
            <param name="height">Height of the thumbnail</param>
            <returns>The thumbnail of the image</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IThumbnailsManager.GetThumbnailContentFromImage(System.Drawing.Image,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the thumbnail from an image
            </summary>
            <param name="image">Image</param>
            <param name="width">Width of the thumbnail</param>
            <param name="height">Height of the thumbnail</param>
            <param name="crop">Crop the image on the thumbnail</param>
            <returns>The thumbnail of the image</returns>
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Components.IThumbnailsManager.GetThumbnailContent(DotNetNuke.Services.FileSystem.IFileInfo,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get the thumbnail from a file
            </summary>
            <param name="item">File</param>
            <param name="width">Width of the thumbnail</param>
            <param name="height">Height of the thumbnail</param>
            <param name="crop">Crop the image on the thumbnail</param>
            <returns>The thumbnail of the file</returns>
        </member>
        <member name="T:Dnn.Modules.ResourceManager.Services.ItemsController">
            <summary>
            Expose any services via this class. You can keep services in separate classes or all together in one service class
            </summary>
        </member>
        <member name="T:Dnn.Modules.ResourceManager.Settings">
            -----------------------------------------------------------------------------
            <summary>
            The Settings class manages Module Settings
            
            Typically your settings control would be used to manage settings for your module.
            There are two types of settings, ModuleSettings, and TabModuleSettings.
            
            ModuleSettings apply to all "copies" of a module on a site, no matter which page the module is on. 
            
            TabModuleSettings apply only to the current module on the current page, if you copy that module to
            another page the settings are not transferred.
            
            If you happen to save both TabModuleSettings and ModuleSettings, TabModuleSettings overrides ModuleSettings.
            
            Below we have some examples of how to access these settings but you will need to uncomment to use.
            
            Because the control inherits from ResourceManagerSettingsBase you have access to any custom properties
            defined there, as well as properties from DNN such as PortalId, ModuleId, TabId, UserId and many more.
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Settings.LoadSettings">
            -----------------------------------------------------------------------------
            <summary>
            LoadSettings loads the settings from the Database and displays them
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="M:Dnn.Modules.ResourceManager.Settings.UpdateSettings">
            -----------------------------------------------------------------------------
            <summary>
            UpdateSettings saves the modified settings to the Database
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Dnn.Modules.ResourceManager.Settings.lblMode">
            <summary>
            lblMode control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Dnn.Modules.ResourceManager.Settings.ddlMode">
            <summary>
            ddlMode control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Dnn.Modules.ResourceManager.Settings.lblHomeFolder">
            <summary>
            lblHomeFolder control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="F:Dnn.Modules.ResourceManager.Settings.ddlFolder">
            <summary>
            ddlFolder control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Dnn.Modules.ResourceManager.View">
            -----------------------------------------------------------------------------
            <summary>
            The View class displays the content
            
            Typically your view control would be used to display content or functionality in your module.
            
            View may be the only control you have in your project depending on the complexity of your module
            
            Because the control inherits from ResourceManagerModuleBase you have access to any custom properties
            defined there, as well as properties from DNN such as PortalId, ModuleId, TabId, UserId and many more.
            
            </summary>
            -----------------------------------------------------------------------------
        </member>
        <member name="F:Dnn.Modules.ResourceManager.View.ResourceManagerContainer">
            <summary>
            ResourceManagerContainer control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
    </members>
</doc>
